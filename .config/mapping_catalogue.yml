# --------------------------------------------------------------------------
#  .config/mapping_catalogue.yml   — “Complete” v3 for Gut-Brain Organoid DW
# --------------------------------------------------------------------------
version: 4
columns:

  # ─────────────────────────────────────────────────────────────────────────
  # 1) Genes
  # ─────────────────────────────────────────────────────────────────────────
  gene_entry:
    regex: "(ENS[A-Z]*G\\d{5,}(?:\\.\\d+)?)"
    transforms:
      - strip_version              # ENSG00000139618.15 → ENSG00000139618
      - stub_fetch_gene_metadata   # <-- a mock, no‐network stub here
      # - fetch_gene_metadata        # → {gene_accession, gene_name,
                                   #    species_taxon_id, gene_length_bp,
                                   #    gc_content_pct, pathway_iris, go_terms}
    target_table: Genes
    target_columns:
      - id                  # INT UNSIGNED
      - gene_accession      # VARCHAR(20)
      - gene_name           # VARCHAR(120)
      - species_taxon_iri   # VARCHAR(255)
      - gene_length_bp      # INT UNSIGNED
      - gc_content          # DECIMAL(5,2)
      - pathway_iri         # VARCHAR(255)
      - go_terms            # TEXT

  # ─────────────────────────────────────────────────────────────────────────
  # 2) Stimuli
  # ─────────────────────────────────────────────────────────────────────────
  stimulus_entry:
    regex: "(CHEBI:\\d+|EFO:\\d+|PR:\\d+|none)"
    transforms:
      - canonical_iri              # CURIE → full IRI
      - stub_fetch_stimulus_metadata    # → {iri, label, class_hint,
                                   #    chemical_formula, smiles,
                                   #    molecular_weight, default_dose,
                                   #    dose_unit}
    target_table: Stimuli
    target_columns:
      - iri                       # VARCHAR(255) PK
      - label                     # VARCHAR(120)
      - class_hint                # VARCHAR(40)
      - chem_formula              # VARCHAR(255)
      - smiles                    # TEXT
      - molecular_weight          # DECIMAL
      - default_dose              # DECIMAL
      - dose_unit                 # VARCHAR(20)

  # ─────────────────────────────────────────────────────────────────────────
  # 3) Microbes
  # ─────────────────────────────────────────────────────────────────────────
  microbe_entry:
    regex: "NCBITaxon:\\d+"
    transforms:
      - fetch_from_ncbi_taxon      # CURIE → taxon_id (INT)
      - stub_fetch_microbe_metadata     # → {taxon_id, species_name,
                                   #    strain_name, genome_size_bp,
                                   #    gc_content_pct,
                                   #    oxygen_requirement,
                                   #    relative_abundance_pct,
                                   #    prevalence_pct}
    target_table: Microbes
    target_columns:
      - id                        # INT PK
      - taxon_id                  # VARCHAR(255)
      - strain_name               # VARCHAR(120)
      - culture_collection        # VARCHAR(80)
      - genome_size_bp            # BIGINT
      - genome_assembly_accession # VARCHAR(30)     
      - genome_size_bp            # BIGINT 
      - oxygen_requirement        # ENUM('aerobe','anaerobe','facultative') 
      - habitat                   # VARCHAR(80)     
      - optimal_growth_temp       # DECIMAL(4,1)    
      - doubling_time             # DECIMAL(5,2)    
      - metabolic_profile_iri     # VARCHAR(255)
      - abundance_index           # DECIMAL(8,4)
      - prevalence                # INT UNSIGNED

  # ─────────────────────────────────────────────────────────────────────────
  # 4) Taxa (metadata for ANY taxon used elsewhere)
  # ─────────────────────────────────────────────────────────────────────────
  taxon_entry:
    regex: "NCBITaxon:\\d+"
    transforms:
      - canonical_iri
      - fetch_taxon_numeric_id     # IRI → id (INT)
      - stub_fetch_taxon_metadata       # → {id, kingdom, rank,
                                   #    gc_content_pct,
                                   #    genome_length_bp,
                                   #    habitat, pathogenicity}
    target_table: Taxa
    target_columns:
      - id                        # INT PK
      - iri                       # VARCHAR(255)
      - species_name              # VARCHAR(255)
      - kingdom                   # ENUM('Bacteria','Eukaryota','Archaea')
      - ranking                   # VARCHAR(60)
      - gc_content                # DECIMAL
      - genome_length             # BIGINT
      - habitat                   # VARCHAR(255)
      - pathogenicity             # ENUM('pathogen','commensal','opportunist')

  # ─────────────────────────────────────────────────────────────────────────
  # 5) Ontology terms (cell types & tissues)
  # ─────────────────────────────────────────────────────────────────────────
  ontology_term_entry:
    regex: "(CL_\\d{7}|UBERON_\\d{7}|EFO_\\d+)"
    transforms:
      - canonical_iri
      - stub_fetch_ontology_term_metadata  # → {iri, label, ontology,
                                           #    definition, synonyms, version}
    target_table: OntologyTerms
    target_columns:
      - id                        # INT
      - iri                       # VARCHAR(255) PK
      - label                     # VARCHAR(120)
      - ontology                  # VARCHAR(80)
      - term_definition           # TEXT
      - synonyms                  # JSON / TEXT
      - onto_version              # VARCHAR(20)

  # ─────────────────────────────────────────────────────────────────────────
  # 6) Studies
  # ─────────────────────────────────────────────────────────────────────────
  study_accession:
    regex: "(E-MTAB-\\d+|GSE\\d+|LOCAL-[A-Za-z0-9_-]+)"
    transforms:
      - normalize_study_accession
      - stub_fetch_study_metadata        # → {study_id, title, source_repo,
                                    #    publication_date, study_type,
                                    #    num_samples, contact_email}
    target_table: Studies
    target_columns:
      - id                        # INT PK
      - iri                       # VARCHAR(255) 
      - title                     # VARCHAR(255)
      - source_repo               # ENUM('ArrayExpress','GEO','LOCAL')
      - publication_date          # DATE
      - study_type                # ENUM('transcriptomic','proteomic','multiomic')
      - num_samples               # INT
      - contact_email             # VARCHAR(120)

  # ─────────────────────────────────────────────────────────────────────────
  # 7) Samples (core + extra metadata)
  # ─────────────────────────────────────────────────────────────────────────
  sample_entry:
    regex: "(SAMP[A-Z0-9]{8})"
    transforms:
      - extract_sample_id
      - stub_fetch_sample_metadata       # → full dict below
    target_table: Samples
    target_columns:
      - id                 #INT UNSIGNED 
      - iri                #VARCHAR(255) 
      - study_iri          #VARCHAR(255)
      - cell_type_iri      #VARCHAR(255)
      - tissue_iri         #VARCHAR(255)
      - organism_iri       #VARCHAR(255)
      - growth_condition   #VARCHAR(120) 
      - raw_counts_uri     #VARCHAR(255) 
      - collection_date    #DATE         
      - donor_age_years    #INT UNSIGNED 
      - replicate_number   #INT UNSIGNED 
      - viability_pct      #DECIMAL(5,2) 
      - rin_score          #DECIMAL(5,3) 

  # ─────────────────────────────────────────────────────────────────────────
  # 8) Link-tables
  # ─────────────────────────────────────────────────────────────────────────
  sample_microbe_link:
    regex: "LINK_SM:SAMP[A-Z0-9]{8},NCBITaxon:\\d+,[0-9]+\\.?[0-9]*,[a-z]+"
    transforms:
      - parse_sample_microbe_record  # → {sample_id, microbe_taxon_id,
                                      #    relative_abundance_pct, evidence}
    target_table: SampleMicrobe
    target_columns:
      - id                  # INT UNSIGNED 
      - sample_id           # INT UNSIGNED 
      - microbe_id          # INT UNSIGNED 
      - evidence            # ENUM('mgnify','literature','inferred') DEFAULT 'mgnify'
      - relative_abundance  # DECIMAL(10,6)

  sample_stimulus_link:
    regex: "LINK_SS:SAMP[A-Z0-9]{8},(CHEBI:\\d+|EFO:\\d+),[0-9]+\\.?[0-9]*,[A-Za-z0-9_]+"
    transforms:
      - parse_sample_stimulus_record # → {sample_id, stimulus_iri,
                                       #    exposure_time_hr, response_marker}
    target_table: SampleStimulus
    target_columns:
      - id           # INT UNSIGNED
      - sample_id    # INT UNSIGNED
      - stimulus_id  # INT UNSIGNED
      - exposure_time_hr  # DECIMAL(5,2) 
      - response_marker   # VARCHAR(120) 

  microbe_stimulus_link:
    regex: "NCBITaxon:\\d+.*(CHEBI:\\d+|EFO:\\d+),[0-9]+\\.?[0-9]*,[a-z]+"
    transforms:
      - parse_microbe_stimulus_record # → {microbe_taxon_id, stimulus_iri,
                                        #    interaction_score, evidence}
    target_table: MicrobeStimulus
    target_columns:
      - id           # INT UNSIGNED 
      - microbe_id   # INT UNSIGNED 
      - stimulus_id  # INT UNSIGNED 
      - evidence     # ENUM('mgnify','literature','inferred') 
      - interaction_score # DECIMAL(5,3) 

  # ─────────────────────────────────────────────────────────────────────────
  # 9) Expression statistics
  # ─────────────────────────────────────────────────────────────────────────
  expression_stat_record:
    regex: "exprstat:.*"             # exprstat:SAMP...,ENSG...,1.23,0.04,500,1234,High
    transforms:
      - parse_expression_stat_record # → {sample_id, gene_accession,
                                       #    log2_fc, p_value, base_mean,
                                       #    raw_count, significance}
    target_table: ExpressionStats
    target_columns:
      - expr_id        # BIGINT UNSIGNED
      - sample_id      # INT UNSIGNED   
      - gene_id        # INT UNSIGNED   
      - log2_fc        # DECIMAL(10,4)  
      - p_value        # DECIMAL(10,4)  
      - significance   # ENUM('Low','Moderate','High')
      - adjusted_pval  # DECIMAL(10,4)   
      - base_mean      # DECIMAL(12,3)   
      - counts         # BIGINT UNSIGNED
