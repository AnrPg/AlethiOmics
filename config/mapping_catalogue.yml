# --------------------------------------------------------------------------
#  config/mapping_catalogue.yml   — v3 for “Gut-Brain Organoid DW”
# --------------------------------------------------------------------------
version: 3          # bump so Harmoniser knows this is the new spec
columns:

  # ─────────────────────────────────────────────────────────────────────────
  # 1) Core reference tables
  # ─────────────────────────────────────────────────────────────────────────
  gene_entry:
    regex: "(ENS[A-Z]*G\\d{5,}(?:\\.\\d+)?)"
    transforms:
      - strip_version               # ENSG00000139618.15 → ENSG00000139618
      - fetch_gene_metadata         # → {gene_accession, gene_name, species_taxon_id,
                                    #    gene_length_bp, gc_content, pathway_iri, go_terms}
    target_table: Genes
    target_column: gene_accession   # PK in Genes :contentReference[oaicite:11]{index=11}

  stimulus_entry:
    regex: "(CHEBI:\\d+|EFO:\\d+|TNF(?:α|a)|butyrate|propionate|acetate|GABA|none)"
    transforms:
      - canonical_iri
      - fetch_stimulus_metadata     # + chem_formula, smiles, molecular_weight,
                                    #   default_dose, dose_unit :contentReference[oaicite:12]{index=12}
    target_table: Stimuli
    target_column: iri

  microbe_entry:
    regex: "NCBITaxon:\\d+"
    transforms:
      - fetch_from_ncbi_taxon       # → taxon_id (INT)
      - fetch_microbe_metadata      # + strain_name … prevalence :contentReference[oaicite:13]{index=13}
    target_table: Microbes
    target_column: taxon_id

  taxon_entry:
    regex: "NCBITaxon:\\d+"
    transforms:
      - canonical_iri
      - fetch_taxon_numeric_id      # → id (INT)
      - fetch_taxon_metadata        # + kingdom, ranking, gc_content, genome_length,
                                    #   habitat, pathogenicity :contentReference[oaicite:14]{index=14}
    target_table: Taxa
    target_column: id               # PK in Taxa

  ontology_term_entry:
    regex: "(CL_\\d{7}|UBERON_\\d{7}|EFO_\\d+|NCBITaxon_\\d+)"
    transforms:
      - canonical_iri
      - fetch_ontology_term_metadata  # + label, ontology, definition, synonyms, version :contentReference[oaicite:15]{index=15}
    target_table: OntologyTerms
    target_column: iri

  study_accession:
    regex: "(E-MTAB-\\d+|GSE\\d+|LOCAL-[A-Za-z0-9_-]+)"
    transforms:
      - normalize_study_accession
      - fetch_study_metadata        # + title, source_repo, publication_date,
                                    #   study_type, num_samples, contact_email :contentReference[oaicite:16]{index=16}
    target_table: Studies
    target_column: study_id

  # ─────────────────────────────────────────────────────────────────────────
  # 2) Samples & per-sample metadata
  # ─────────────────────────────────────────────────────────────────────────
  sample_accession:
    regex: "(SAMP[A-Z0-9]{8})"
    transforms:
      - extract_sample_id
      - fetch_sample_metadata       # → {iri, study_id, cell_type_id, tissue_id,
                                    #    organism_id, growth_condition, raw_counts_uri,
                                    #    collection_date, donor_age_years, replicate_number,
                                    #    viability_pct, rin_score,
                                    #    stimulus_id, microbe_id}
                                    #    :contentReference[oaicite:17]{index=17}
    target_table: Samples
    target_column: iri

  # ─────────────────────────────────────────────────────────────────────────
  # 3) Relationship (M:N) link-tables
  # ─────────────────────────────────────────────────────────────────────────
  sample_microbe_link:
    regex: "LINK_SM:SAMP[A-Z0-9]{8},NCBITaxon:\\d+,\\d+\\.\\d+"
    transforms:
      - parse_sample_microbe_record   # → {sample_id, microbe_id,
                                      #    relative_abundance, evidence}
    target_table: SampleMicrobe
    target_column: sample_id          # FK → Samples.id :contentReference[oaicite:18]{index=18}

  sample_stimulus_link:
    regex: "LINK_SS:SAMP[A-Z0-9]{8},(CHEBI:\\d+|EFO:\\d+),\\d+(?:\\.\\d+)?"
    transforms:
      - parse_sample_stimulus_record  # → {sample_id, stimulus_id,
                                      #    exposure_time_hr, response_marker}
    target_table: SampleStimulus
    target_column: sample_id

  microbe_stimulus_link:
    regex: "NCBITaxon:\\d+.*(CHEBI:\\d+|EFO:\\d+)"
    transforms:
      - parse_microbe_stimulus_record # → {microbe_id, stimulus_id, interaction_score, evidence}
    target_table: MicrobeStimulus
    target_column: microbe_id         # FK → Microbes.id :contentReference[oaicite:19]{index=19}

  # ─────────────────────────────────────────────────────────────────────────
  # 4) Differential-expression statistics
  # ─────────────────────────────────────────────────────────────────────────
  expression_stat_record:
    regex: "exprstat:.*"              # eg: exprstat:SAMPXXXX,ENSG...,1.23,0.04,0.05,1234,High
    transforms:
      - parse_expression_stat_record  # → {sample_id, gene_id, log2_fc, p_value,
                                      #    adjusted_pval, base_mean, counts, significance}
    target_table: ExpressionStats
    target_column: sample_id          # FK → Samples.id

# --------------------------------------------------------------------------
#  AVAILABLE TRANSFORM OPERATORS
#  (add these to TRANSFORM_REGISTRY in etl/harmonise.py)
# --------------------------------------------------------------------------
#  • strip_version(text)                    – drop Ensembl “.13” suffix
#  • canonical_iri(text)                    – CURIE ⇢ full IRI, case-normalised
#  • fetch_gene_metadata(gene_id)           – returns full dict for *Genes*
#  • fetch_stimulus_metadata(iri)           – returns full dict for *Stimuli*
#  • fetch_from_ncbi_taxon(curie)           – maps to integer taxon_id
#  • fetch_microbe_metadata(taxon_id)       – returns full dict for *Microbes*
#  • fetch_taxon_numeric_id(curie)          – helper used inside taxon transforms
#  • fetch_taxon_metadata(taxon_id)         – returns full dict for *Taxa*
#  • fetch_ontology_term_metadata(iri)      – returns full dict for *OntologyTerms*
#  • normalize_study_accession(acc)         – canonical study_id
#  • fetch_study_metadata(study_id)         – returns full dict for *Studies*
#  • extract_sample_id(text)                – pass-through or custom parse
#  • fetch_sample_metadata(sample_id)       – returns full dict for *Samples*
#  • parse_sample_microbe_record(text)      – returns dict for *SampleMicrobe*
#  • parse_sample_stimulus_record(text)     – returns dict for *SampleStimulus*
#  • parse_microbe_stimulus_record(text)    – returns dict for *MicrobeStimulus*
#  • parse_expression_stat_record(text)     – returns dict for *ExpressionStats*
